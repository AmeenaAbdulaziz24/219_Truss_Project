%declaration of global variables
global numMems
global forceL
global nodes 
global colSize 
global member
global S_p 
S_p = 54*10^6;

% this is test data, change depending on truss

%angles
theata = [60, 0, 120];

%counter for how far the force calculations will go when finding the largest force in each pin
%number of members connected to each node
member = [2, 2, 2];

%this is the connection of members for the nodes
%has to be square matrix
conn = [1, 2;
2, 3;
1, 3];

Fe = [60, 50, 70];

%assigns number of pins on the truss
nodes = 3;

%end of test data

%finds the largest force in each pin
for n = 1:nodes
    %this is used to store the number of members attached to the pin with 
    % maximum force
    if (n == 1) 
        numMems = 1;
    end
    %stores the first x and y components
    largestx = Fe(conn(n, 1))*cosd(theata(conn(n, 1)));
    largesty = Fe(conn(n, 1))*sind(theata(conn(n, 1)));
    %counts from 2 to the number or members left and finds those components
    for x = 2:member(n)
        xCurr = Fe(conn(n, x))*cosd(theata(conn(n, x)));
        yCurr = Fe(conn(n, x))*sind(theata(conn(n, x)));
        %compares the current x and y components to the largest
        if (abs(xCurr) + abs(yCurr) > abs(largestx) + abs(largesty)) 
            %if larger, then it will be stored
            largestx = xCurr;
            largesty = yCurr;
        end
    end
    %finds the force using the x and y components
    forceL(n) = sqrt(largestx ^ 2 + largesty ^2);
    %stores the row number for which has the greatest force
    if (forceL(n) > forceL(numMems)) 
        numMems = n;
    end
end

global d 
d = 0.4786;

%goes through the shearing failures of each pin and prints them if there is
%failure
for n = 1: nodes
    if(shearing(forceL(n), d, member(n), S_p))
        fprintf('Member %i\n', n);
    end
end

%this is the failure function for shearing
function failure = shearing(F, d, n, maxS)
    %this equation calculates the shearing in the desired pin based on the
    %force
    %if the number of members attached to the pin is greater than 2 then
    %use this equation
    if (n > 2) 
        S = (F/4) / ((pi/4)*d^2);
    else 
        S = F / ((pi/4)*d^2);
    end
    if (S > maxS)
        failure = 1;
    else 
        failure = 0;
    end
end
